/*
 * Copyright (c) 2023 ZitaoTech
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
/* #include <dt-bindings/zmk/pointing.h>
*/

#define SYM 1
#define UPPER 2

&mt { tapping-term-ms = <350>; };

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&mkp LCLK>, <&bt BT_CLR>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <500>;
            bindings = <&out &kp>;
        };

        ALTL: ALTL {
            compatible = "zmk,behavior-tap-dance";
            label = "ALTL";
            #binding-cells = <0>;
            bindings = <&sl 2>, <&to 2>;

            tapping-term-ms = <300>;
        };

        SHFT: SHFT {
            compatible = "zmk,behavior-tap-dance";
            label = "SHFT";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT>, <&kp CAPSLOCK>;

            tapping-term-ms = <300>;
        };

        Symbol: Symbol {
            compatible = "zmk,behavior-tap-dance";
            label = "SYMBOL";
            #binding-cells = <0>;
            bindings = <&sl 1>, <&to 1>;

            tapping-term-ms = <300>;
        };

        CTRL: CTRL {
            compatible = "zmk,behavior-tap-dance";
            label = "CTRL";
            #binding-cells = <0>;
            bindings = <&sk RCTRL>, <&kt RCTRL>;

            tapping-term-ms = <300>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Caps_lock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <27 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mkp LCLK    &mkp RCLK
&kp CLCK     &kp LGUI     &mkp LCLK         &mt ESC K_BACK  &kp TAB
&mt LS(Q) Q  &mt LS(W) W  &mt LS(E) E       &mt LS(R) R     &mt LS(T) T                &mt LS(Y) Y    &mt LS(U) U  &mt LS(I) I      &mt LS(O) O      &mt LS(P) P
&mt LS(A) A  &mt LS(S) S  &mt LS(D) D       &mt LS(F) F     &mt LS(G) G                &mt LS(H) H    &mt LS(J) J  &mt LS(K) K      &mt LS(L) L      &kp BSPC
&ALTL        &mt LS(Z) Z  &mt LS(X) X       &mt LS(C) C     &mt LS(V) V                &mt LS(B) B    &mt LS(N) N  &mt LS(M) M      &mt DOLLAR BSLH  &kp ENTER
                          &sk LEFT_CONTROL                  &mt C_VOICE_COMMAND LCTRL  &kp SPACE      &Symbol      &sk RIGHT_SHIFT
            >;
        };

        sym_layer {
            bindings = <
&kp C_VOL_UP  &kp C_VOL_DN
&kp PSCRN     &kp C_AC_SEARCH  &mkp LCLK         &kp F5  &kp F12
&kp HASH      &kp N1           &kp N2            &kp N3  &mt LBKT LPAR  &mt RBKT RPAR    &kp UNDER  &kp MINUS        &kp PLUS    &kp AT
&kp STAR      &kp N4           &kp N5            &kp N6  &kp SLASH      &kp COLON        &kp SEMI   &kp APOS         &kp DQT     &kp BACKSPACE
&to 2         &kp N7           &kp N8            &kp N9  &kp QMARK      &kp EXCL         &kp COMMA  &kp DOT          &kp C_MUTE  &kp ENTER
                               &sk LEFT_CONTROL          &kp N0         &kp SPACE        &to 0      &sk RIGHT_SHIFT
            >;
        };

        upper_layer {
            bindings = <
&msc SCRL_UP  &msc SCRL_DOWN
&bt BT_SEL 0  &bt BT_SEL 1    &td0              &bt BT_SEL 2   &bt BT_SEL 3
&kp HOME      &kp UP          &kp END           &kp PAGE_UP    &ext_power EP_TOG  &none                &kp LT      &kp GT           &kp PIPE     &kp KP_EQUAL
&kp LEFT      &kp DOWN        &kp RIGHT         &kp PAGE_DOWN  &kp BSLH           &kp AMPS             &kp LBRC    &kp RBRC         &kp CARET    &kp DELETE
&to 0         &none           &none             &none          &bl BL_DEC         &bl BL_TOG           &bl BL_INC  &sys_reset       &bootloader  &kp ENTER
                              &sk LEFT_CONTROL                 &kp LALT           &hm OUT_TOG SPACE    &to 1       &sk RIGHT_SHIFT
            >;
        };
    };
};
